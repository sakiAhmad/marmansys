package com.marmansys.entity;
// Generated Dec 10, 2016 3:49:06 PM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Medicine generated by hbm2java
 */
@Entity
@Table(name="medicine"
    ,catalog="mr_database"
)
public class Medicine  implements java.io.Serializable {


     private Integer medicineId;
     private Generic generic;
     private MeasurementUnit measurementUnit;
     private MedicineType medicineType;
     private String medicineName;
     private float medicineRate;
     private Set<OrderDetail> orderDetails = new HashSet<OrderDetail>(0);
     private Set<Offer> offers = new HashSet<Offer>(0);
     private Set<Order> orders = new HashSet<Order>(0);

    public Medicine() {
    }

	
    public Medicine(Generic generic, MeasurementUnit measurementUnit, MedicineType medicineType, String medicineName, float medicineRate) {
        this.generic = generic;
        this.measurementUnit = measurementUnit;
        this.medicineType = medicineType;
        this.medicineName = medicineName;
        this.medicineRate = medicineRate;
    }
    public Medicine(Generic generic, MeasurementUnit measurementUnit, MedicineType medicineType, String medicineName, float medicineRate, Set<OrderDetail> orderDetails, Set<Offer> offers, Set<Order> orders) {
       this.generic = generic;
       this.measurementUnit = measurementUnit;
       this.medicineType = medicineType;
       this.medicineName = medicineName;
       this.medicineRate = medicineRate;
       this.orderDetails = orderDetails;
       this.offers = offers;
       this.orders = orders;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="medicine_id", unique=true, nullable=false)
    public Integer getMedicineId() {
        return this.medicineId;
    }
    
    public void setMedicineId(Integer medicineId) {
        this.medicineId = medicineId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="generic_id", nullable=false)
    public Generic getGeneric() {
        return this.generic;
    }
    
    public void setGeneric(Generic generic) {
        this.generic = generic;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="measurement_id", nullable=false)
    public MeasurementUnit getMeasurementUnit() {
        return this.measurementUnit;
    }
    
    public void setMeasurementUnit(MeasurementUnit measurementUnit) {
        this.measurementUnit = measurementUnit;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="type_id", nullable=false)
    public MedicineType getMedicineType() {
        return this.medicineType;
    }
    
    public void setMedicineType(MedicineType medicineType) {
        this.medicineType = medicineType;
    }

    
    @Column(name="medicine_name", nullable=false, length=45)
    public String getMedicineName() {
        return this.medicineName;
    }
    
    public void setMedicineName(String medicineName) {
        this.medicineName = medicineName;
    }

    
    @Column(name="medicine_rate", nullable=false, precision=12, scale=0)
    public float getMedicineRate() {
        return this.medicineRate;
    }
    
    public void setMedicineRate(float medicineRate) {
        this.medicineRate = medicineRate;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="medicine")
    public Set<OrderDetail> getOrderDetails() {
        return this.orderDetails;
    }
    
    public void setOrderDetails(Set<OrderDetail> orderDetails) {
        this.orderDetails = orderDetails;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="medicine")
    public Set<Offer> getOffers() {
        return this.offers;
    }
    
    public void setOffers(Set<Offer> offers) {
        this.offers = offers;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="medicine")
    public Set<Order> getOrders() {
        return this.orders;
    }
    
    public void setOrders(Set<Order> orders) {
        this.orders = orders;
    }




}


